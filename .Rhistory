?solve
source('C:/Users/Ninja/Google Drive/Cursos/Coursera/Data Science/R Programming/Assigment/ProgrammingAssignment2/cachematrix.R')
cacheSolve <- function(x, ...){
m <- x$getsolve(){
if(!is.null(m)){
message("getting data")
return(m)
}
dat <- x$get()
m <- solve(dat, ...)
x$setsolve(m)
m
}
}
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y){
x <<- y
m <<- NULL
}
get <- function() x
setsolve <- function(solve) m <<- solve
getsolve <- function() m
list(set = set, get = get, setsolve = setsolve, getsolve = getsolve)
}
cacheSolve <- function(x, ...){
m <- x$getsolve(){
if(!is.null(m)){
message("getting data")
return(m)
}
dat <- x$get()
m <- solve(dat, ...)
x$setsolve(m)
m
}
}
source('C:/Users/Ninja/Google Drive/Cursos/Coursera/Data Science/R Programming/Assigment/ProgrammingAssignment2/cachematrix.R')
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cachesolve <- function(x, ...){
m <- x$getsolve(){
if(!is.null(m)){
message("getting data")
return(m)
}
dat <- x$get()
m <- solve(dat, ...)
x$setsolve(m)
m
}
}
cachesolve <- function(x, ...){
m <- x$getsolve(){
if(!is.null(m)){
message("getting data")
return(m)
}
dat <- x$get()
m <- solve(dat, ...)
x$setsolve(m)
m
}
}
cacheSolve <- function(x, ...) {
m <- x$getsolve(){
if(!is.null(m)){
message("getting data")
return(m)
}
dat <- x$get()
m <- solve(dat, ...)
x$setsolve(m)
m
}
}
source('C:/Users/Ninja/Google Drive/Cursos/Coursera/Data Science/R Programming/Assigment/ProgrammingAssignment2/cachematrix.R')
cachemean <- function(x, ...) {
m <- x$getsolve()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cacheSolve <- function(x, ...) {
m <- x$getsolve()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cacheSolve <- function(x, ...) {
m <- x$getsolve()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cacheSolve <- function(x, ...) {
m <- x$getsolve()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cacheSolve <- function(x, ...) {
m <- x$getsolve()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setmean(m)
m
}
getsolve <- function() m
source('C:/Users/Ninja/Google Drive/Cursos/Coursera/Data Science/R Programming/Assigment/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/Ninja/Google Drive/Cursos/Coursera/Data Science/R Programming/Assigment/ProgrammingAssignment2/cachematrix.R')
matrix(1:10,1,1)
matrix(1:10,1,10)
a <- matrix(1:10,1,10)
makeCacheMatrix(a)
cacheSolve(a)
a
b <- makeCacheMatrix(a)
cacheSolve(b)
class(a)
matrix(1:5,2,2)
matrix(1:2,2,2)
a <- matrix(1:2,2,2)
b <- makeCacheMatrix(a)
cacheSolve(b)
m <- matrix(c(0, 2, 1, 0), nrow = 2, ncol = 2, byrow = TRUE)
solve(m)
m
n <- makeCacheMatrix(m)
cacheSolve(n)
cacheSolve(n)
n <- makeCacheMatrix(m)
cacheSolve(n)
